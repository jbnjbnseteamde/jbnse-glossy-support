
services:

  postgres:
    image: ${REPOSITORY}postgres-de:${POSTGRES_TAG}
    container_name: ${COMPOSE_PROJECT_NAME}-postgres
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  api:
    image: ${REPOSITORY}glossy-api01:${API_TAG}
    container_name: ${COMPOSE_PROJECT_NAME}-api
    volumes:
      - type: bind
        source: ${MOUNT_ROOT}/var/lib/${COMPOSE_PROJECT_NAME}
        target: /var/lib/glossy-api
    environment:
      spring.datasource.url: jdbc:postgresql://postgres:5432/glossyapi
      spring.datasource.password: ${POSTGRES_PASSWORD}
    expose:
      - ${API_PORT}
    ports:
      - ${API_PORT}:${API_PORT}
    depends_on:
      postgres:
        condition: service_started

  cat:
    image: ${REPOSITORY}glossy-cat01:${CAT_TAG}
    container_name: ${COMPOSE_PROJECT_NAME}-cat
    expose:
      - ${CAT_PORT}
    ports:
      - ${CAT_PORT}:${CAT_PORT}
    restart: unless-stopped
    depends_on:
      api:
        condition: service_started
      keycloak:
        condition: service_started

  keycloak:
    # https://medium.com/@fingervinicius/easy-running-keycloak-with-docker-compose-b0d7a4ee2358
    image: quay.io/keycloak/keycloak:${KEYCLOAK_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-keycloak
    environment:
      KC_HOSTNAME: keycloak # localhost funktioniert nicht innerhalb docker-Konfiguration
      KC_HOSTNAME_PORT: ${KEYCLOAK_PORT}
      KC_HTTP_PORT: ${KEYCLOAK_PORT}
      KC_HOSTNAME_STRICT_BACKCHANNEL: "true"
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_HEALTH_ENABLED: "true"
      KC_LOG_LEVEL: info
    expose:
      - ${KEYCLOAK_PORT}
    ports:
      - ${KEYCLOAK_PORT}:${KEYCLOAK_PORT}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${KEYCLOAK_PORT}/health/ready" ]
      interval: 15s
      timeout: 2s
      retries: 15
    command: [ "start", "--http-enabled", "true"]
